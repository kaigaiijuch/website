#!/usr/bin/env bash

set -eu -o pipefail
# set -C # Prevent output redirection using ‘>’, ‘>&’, and ‘<>’ from overwriting existing files.

if [[ "${TRACE-0}" == "1" ]]; then
    set -vx
fi

if [[ "${1-}" =~ ^-*h(elp)?$ ]]; then
    echo 'Usage: ./clean output_directory config_file
clean the built static pages in the output directory.

ARGS:
  output_directory as the output directory. (default: public)
  config_file as the page config file. (default: bin/pages/list.rb)
'
    exit
fi

cd "$(dirname "$0")"
APP_ROOT=$(cd ../../; pwd)
rails="$APP_ROOT/bin/rails"

main() {
  output_directory=${1:-public}
  config_file=${2:-bin/pages/list.rb}

  echo "# target static pages for paths:"
  paths=$($rails runner "$APP_ROOT/$config_file")
  echo "${paths[@]}"
  echo

  echo "# clean static pages..."
  for path in $paths; do
    file="$APP_ROOT/$output_directory$path.html"
    if [[ -f $file ]]; then
      echo "rm $file"
      rm $file
    else
      echo "File does not exist: $file"
    fi
  done

  echo "# clean version file..."
  echo "rm $APP_ROOT/$output_directory/version"
  rm $APP_ROOT/$output_directory/version
}

main "$@"

# styleguide | Style guides for Google-originated open-source projects https://google.github.io/styleguide/shellguide.html
# Shell Script Best Practices — The Sharat's https://sharats.me/posts/shell-script-best-practices/
