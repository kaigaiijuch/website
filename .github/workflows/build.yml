name: "build"
on:
  push:
    branches: [ "main" ]
  pull_request: #teporary
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: production
      DATA_REPO_TOKEN: ${{ secrets.DEPLOY_BOT_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Checkout data repo
        uses: actions/checkout@v4
        with:
          repository: kaigaiijuch/website_data
          path: data
          token: ${{ env.DATA_REPO_TOKEN }}
      - name: setup docker
        run: docker compose -f docker-compose-build.yml build
      - name: build static html files
        run: docker compose -f docker-compose-build.yml run web bin/build && ls -lah public
      - name: save version file
        run: |
          echo "website: ${{github.event.after}}\nwebsite_date: $(cd data && git show -s --format=%H)" > public/version && cat public/version
      - name: upload static html files as a artifact
        uses: actions/upload-artifact@v4
        with:
          name: public_files
          path: |
            public
      - name: Check commit message
        id: check_message
        run: |
          message=$(git log --format=%B -n 1 HEAD)
          if [[ echo $message | grep "${{ vars.RELEASE_TRRIGER_MESSAGE }}" ]]; then
            echo "run_release=true" >> "$GITHUB_ENV"
          else
            echo "run_release=false" >> "$GITHUB_ENV"
          fi
      - name: ping release trigger
        if: env.run_release == 'true'
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.DEPLOY_BOT_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/kaigaiijuch/release/dispatches \
            -d '{"event_type":"run_release"}'
